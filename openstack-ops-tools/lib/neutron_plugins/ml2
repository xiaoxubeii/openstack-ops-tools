#!/bin/bash
# Enable this to simply and quickly enable tunneling with ML2.
# Select either 'gre', 'vxlan', or 'gre,vxlan'
NEUTRON_ML2_TENANT_NETWORK_TYPE=${NEUTRON_ML2_TENANT_NETWORK_TYPE:-"vxlan"}
# This has to be set here since the agent will set this in the config file
if [[ "$NEUTRON_ML2_TENANT_NETWORK_TYPE" == "gre" || "$NEUTRON_ML2_TENANT_NETWORK_TYPE" == "vxlan" ]]; then
    NEUTRON_TUNNEL_TYPES=$NEUTRON_ML2_TENANT_NETWORK_TYPE
elif [[ "$ENABLE_TENANT_TUNNELS" == "True" ]]; then
    NEUTRON_TUNNEL_TYPES=gre
fi

# Default openvswitch L2 agent
NEUTRON_AGENT=${NEUTRON_AGENT:-openvswitch}
if [ -f $TOP_DIR/lib/neutron_plugins/${NEUTRON_AGENT}_agent ]; then
    source $TOP_DIR/lib/neutron_plugins/${NEUTRON_AGENT}_agent
fi

# List of MechanismDrivers to load
NEUTRON_ML2_PLUGIN_MECHANISM_DRIVERS=${NEUTRON_ML2_PLUGIN_MECHANISM_DRIVERS:-openvswitch,linuxbridge}
# List of Type Drivers to load
NEUTRON_ML2_PLUGIN_TYPE_DRIVERS=${NEUTRON_ML2_PLUGIN_TYPE_DRIVERS:-local,flat,vlan,gre,vxlan}
# Default GRE TypeDriver options
NEUTRON_ML2_PLUGIN_GRE_TYPE_OPTIONS=${NEUTRON_ML2_PLUGIN_GRE_TYPE_OPTIONS:-tunnel_id_ranges=$TENANT_TUNNEL_RANGES}
# Default VXLAN TypeDriver options
NEUTRON_ML2_PLUGIN_VXLAN_TYPE_OPTIONS=${NEUTRON_ML2_PLUGIN_VXLAN_TYPE_OPTIONS:-vni_ranges=1001:2000}
# Default VLAN TypeDriver options
NEUTRON_ML2_PLUGIN_VLAN_TYPE_OPTIONS=${NEUTRON_ML2_PLUGIN_VLAN_TYPE_OPTIONS:-}
# List of extension drivers to load, use '-' instead of ':-' to allow people to
# explicitly override this to blank
NEUTRON_ML2_PLUGIN_EXT_DRIVERS=${NEUTRON_ML2_PLUGIN_EXT_DRIVERS-port_security}

# L3 Plugin to load for ML2
ML2_L3_PLUGIN=${ML2_L3_PLUGIN:-neutron.services.l3_router.l3_router_plugin.L3RouterPlugin}

function populate_ml2_config {
    CONF=$1
    SECTION=$2
    OPTS=$3

    if [ -z "$OPTS" ]; then
        return
    fi
    for I in "${OPTS[@]}"; do
        # Replace the first '=' with ' ' for iniset syntax
        iniset $CONF $SECTION ${I/=/ }
    done
}

function neutron_plugin_configure_common {
    NEUTRON_PLUGIN_CONF_PATH=etc/neutron/plugins/ml2
    NEUTRON_PLUGIN_CONF_FILENAME=ml2_conf.ini
    NEUTRON_PLUGIN_CLASS="neutron.plugins.ml2.plugin.Ml2Plugin"
    # The ML2 plugin delegates L3 routing/NAT functionality to
    # the L3 service plugin which must therefore be specified.
    _neutron_service_plugin_class_add $ML2_L3_PLUGIN
}

function neutron_plugin_configure_service {
    if [[ "$NEUTRON_ML2_TENANT_NETWORK_TYPE" != "local" ]]; then
        NEUTRON_SRV_EXTRA_OPTS+=(tenant_network_types=$NEUTRON_ML2_TENANT_NETWORK_TYPE)
    elif [[ "$ENABLE_TENANT_TUNNELS" == "True" ]]; then
        # This assumes you want a simple configuration, and will overwrite
        # NEUTRON_SRV_EXTRA_OPTS if set in addition to ENABLE_TENANT_TUNNELS.
        NEUTRON_SRV_EXTRA_OPTS+=(tenant_network_types=gre)
        NEUTRON_ML2_PLUGIN_GRE_TYPE_OPTIONS=(tunnel_id_ranges=$TENANT_TUNNEL_RANGES)
    elif [[ "$ENABLE_TENANT_VLANS" == "True" ]]; then
        NEUTRON_SRV_EXTRA_OPTS+=(tenant_network_types=vlan)
    else
        echo "WARNING - The ml2 plugin is using local tenant networks, with no connectivity between hosts."
    fi

    # Allow for overrding VLAN configuration (for example, to configure provider
    # VLANs) by first checking if NEUTRON_ML2_PLUGIN_VLAN_TYPE_OPTIONS is set.
    if [ "$NEUTRON_ML2_PLUGIN_VLAN_TYPE_OPTIONS" == "" ]; then
        if [[ "$ML2_VLAN_RANGES" == "" ]] && [[ "$PHYSICAL_NETWORK" != "" ]]; then
            ML2_VLAN_RANGES=$PHYSICAL_NETWORK
            if [[ "$TENANT_VLAN_RANGE" != "" ]]; then
                ML2_VLAN_RANGES=$ML2_VLAN_RANGES:$TENANT_VLAN_RANGE
            fi
        fi
        if [[ "$ML2_VLAN_RANGES" != "" ]]; then
            NEUTRON_ML2_PLUGIN_VLAN_TYPE_OPTIONS=(network_vlan_ranges=$ML2_VLAN_RANGES)
        fi
    fi

    populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE ml2 mechanism_drivers=$NEUTRON_ML2_PLUGIN_MECHANISM_DRIVERS

    populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE ml2 type_drivers=$NEUTRON_ML2_PLUGIN_TYPE_DRIVERS

    populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE ml2 $NEUTRON_SRV_EXTRA_OPTS

    populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE ml2_type_gre $NEUTRON_ML2_PLUGIN_GRE_TYPE_OPTIONS

    populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE ml2_type_vxlan $NEUTRON_ML2_PLUGIN_VXLAN_TYPE_OPTIONS

    populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE ml2_type_vlan $NEUTRON_ML2_PLUGIN_VLAN_TYPE_OPTIONS

    if [ $NEUTRON_ML2_TENANT_NETWORK_TYPE = "vxlan" -o $NEUTRON_ML2_TENANT_NETWORK_TYPE = "gre" ]; then
        populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE agent tunnel_types=$NEUTRON_ML2_TENANT_NETWORK_TYPE
    fi

    if [[ "$NEUTRON_DVR_MODE" != "legacy" ]]; then
        populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE agent l2_population=True
        populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE agent tunnel_types=vxlan
        populate_ml2_config /$NEUTRON_PLUGIN_CONF_FILE agent enable_distributed_routing=True
    fi
}

function has_neutron_plugin_security_group {
    return 0
}
